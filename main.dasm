	processor 6502

	include "header.dasm"
	include "nes_defs.dasm"
        
        seg.u ZEROPAGE
        org $00
position: byte
buttons: byte
        seg Code
        org $8000
        
reset:	subroutine
	; enable bg rendering and nmi interrupt
	lda #(BG_ENABLE | BG_COL_ENABLE)
        sta PPU_MASK
        lda #(NMI_ENABLE)
        sta PPU_CTRL
        
        ; draw palette
        lda #>PPU_BG_PAL
        sta PPU_ADDR
        lda #<PPU_BG_PAL
        sta PPU_ADDR
        
        ; write palette
        lda #$0f
        sta PPU_DATA
        lda #$01
        sta PPU_DATA
        lda #$06
        sta PPU_DATA
        lda #$09
        sta PPU_DATA
        
        ; start at pos 1
        lda #1
        sta position
        
        ; enable APU
	lda #PULSEA_ENABLE
        sta APU_STATUS
                
.loop:
        
	jmp .loop
        
draw_char: subroutine
	; goto top line
        lda #$22
        sta PPU_ADDR
        lda position
        sta PPU_ADDR
        
        ; draw tiles
        lda #$E0
        sta PPU_DATA
        lda #$E2
        sta PPU_DATA
        
        ; goto bottom line
        lda #$22
        sta PPU_ADDR
        
        clc
        lda #32
        adc position
        sta PPU_ADDR
        
        ; draw tiles
        lda #$E1
        sta PPU_DATA
        lda #$E3
        sta PPU_DATA
        rts
        
clear_char: subroutine
	; goto top line
        lda #$22
        sta PPU_ADDR
        lda position
        sta PPU_ADDR
        
        ; draw tiles
        lda #0
        sta PPU_DATA
        lda #0
        sta PPU_DATA
        
        ; goto bottom line
        lda #$22
        sta PPU_ADDR
        
        clc
        lda #32
        adc position
        sta PPU_ADDR
        
        ; draw tiles
        lda #0
        sta PPU_DATA
        lda #0
        sta PPU_DATA
        rts
        
read_joypad: subroutine
	lda #1
        sta PAD_A
        sta buttons
        lsr
        sta PAD_A
.loop:
	lda PAD_A
        lsr
        rol buttons
        bcc .loop
        rts

play_beep:
	; set frequency
	lda #<279
	sta PULSEA_PERIOD_LO
        lda #>279
        sta PULSEA_PERIOD_HI

	; set volume
        lda #(DC_50 | %1111)
        sta PULSEA
        rts
        
nmi:    subroutine
	jsr read_joypad
	jsr clear_char
        
        ; input
        lda buttons
        and #(BUTTON_LEFT)
        beq .check_right
        dec position
.check_right:
	lda buttons
        and #(BUTTON_RIGHT)
        beq .end_if
        inc position
.end_if:
        jsr draw_char
        
        lda #0
        sta PPU_SCROLL
        sta PPU_SCROLL
                
        lda position
        cmp #30
        bcc .check_left_wall
        lda #29
        sta position
        jsr play_beep
        
.check_left_wall:
        lda position
        cmp #0
        bne .return
        lda #1
        sta position
        jsr play_beep
        
.return:
irq:	subroutine
	rti

	seg Vectors
	org $fffa
        word nmi
        word reset
        word irq
        
        org $10000
        incbin "tiles.chr"
        incbin "tiles.chr"